#summary Overview of the testing framework.
#labels Phase-Implementation

= Testing =

There are two types of testing within the project; unit tests and "functional" tests. 

== Unit Tests ==

The unit tests are standard [http://www.junit.org/ JUnit] tests that are executed as part of the build cycle. The tests can be run using the [http://ant.apache.org Ant] build tool by executing the command "ant unit-tests" in the base directory of the project. See the [Building] page for further details.

== "Functional" Tests ==

The "functional" tests compare the output of the generated assembler and an external assembler aswell as attempting to disassemble the output generated by the assembler. 

Every instruction is tested so that each operand is varied according to all the different permutations (in the case of symbolic operands) or using boundary values for integer operands. This results in a relatively exhaustive testing of the assembler output but can take a long time to run for all ISAs.

The functional tests are run by executed the Java class `jasm.gen.test.Main`. The help for the command is below. It should be noted that the tests can compare the output of assembler on the local node and an external node by specifying the `--remote-account peter@example.com` option. This will use ssh and scp to perform the remote commands.

{{{
$ java -cp target/jasm.jar:lib/cli-1.0.jar jasm.gen.test.Main --help

Assembler Tester
Usage: java jasm.gen.test.Main [options]

Options: 
        -h, --help
                print this message and exit
        --gen-source
                generates source file for each template
        --exclude-external-assembler-tests
                do not compare assembler output against external assembler
        --exclude-disassembler-tests
                do not disassemble assembler output
        --pattern <argument>
                only test templates with the substring in their name
        --start <argument>
                the serial number of the first template to be tested
        --end <argument>
                the serial number of the last template to be tested
        -a, --assembler <argument>
                the name of assembler to test. amd64, ia32, ppc32, ppc64, sparc32 or sparc64
        --remote-account <argument>
                the remote account to perform external tests on. ie user@host
        --remote-assembler-path <argument>
                the path to assembler on remote machine. ie /usr/local/bin/

}}}